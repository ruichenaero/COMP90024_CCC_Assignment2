---
# Configure couchdb
- name: Pull docker image
  become: yes
  docker_image:
      name: couchdb
      tag: latest
      source: pull

- name: Write CouchDB config .ini file
  template:
    src: local_ini.j2
    dest: "{{ remote_directory }}/COMP90024_CCC_Assignment2/couchDB/local.ini"
    force: yes

- name: Write CouchDB config .args file
  template:
    src: vm_args.j2
    dest: "{{ remote_directory }}/COMP90024_CCC_Assignment2/couchDB/vm.args"
    force: yes

- name: Check if the docker is running
  become: yes
  shell: "docker start couch"
  ignore_errors: true
  no_log: true
  register: docker_start

- name: Start the CouchDB docker
  become: yes
  shell: >
    docker run
    --restart=always 
    -p 5984:5984 
    -p 5986:5986 
    -p 4369:4369 
    -p 9100-9150:9100-9150 
    -e COUCHDB_USER="{{ couchdb_user }}" 
    -e COUCHDB_PASSWORD="{{ couchdb_password }}"
    -v "{{ remote_directory }}/COMP90024_CCC_Assignment2/couchDB/vm.args":/opt/couchdb/etc/vm.args 
    -v "{{ remote_directory }}/COMP90024_CCC_Assignment2/couchDB/local.ini":/opt/couchdb/etc/local.ini 
    -v /data/couchdb:/opt/couchdb/data 
    --name couch-node
    -d couchdb:latest
  when: docker_start.rc != 0 

- pause:
    seconds: 10

- name: Enable cluster on each node
  shell: >
    curl -X POST -H "Content-Type: application/json"
    http://{{ couchdb_user }}:{{ couchdb_passwd }}@localhost:5984/_cluster_setup
    -d '{"action": "enable_cluster", "bind_address":"0.0.0.0",
    "username": "{{ couchdb_user }}", "password":"{{ couchdb_passwd }}",
    "node_count":"{{ groups['all'] | length }}"}'